
1. 
Question : "რა არის !important-ი css-ში და შეგვიძლია თუ არა მისი გამოყენება tailwind-ში?" 
Answer : !important cssში შეგვიძლია გამოვიყენოთ კლასისთვის. მარტივად რომ ვთქვა მთლიანი ძალა გადაეცემა Importantთან დაწერილ სტილებს
 , ასევე შეგვიძლია მისი გამოყენება tailwindში
--------
2. 
Question : "რა არის <iframe>?" 
Answer : iframe არის ელემენტი რომელიც ტვირთავს სხვა ელემენტს Web Pageში
--------
3.
Question : "მოიყვანეთ სემანტიკური ელემენტების მაგალითები" 
Answer : <nav> <section> <article>
--------
4.
Question : "რა განსხვავებებია position: relative-ს, fixed-ს, absolute-სა და sticky-ის შორის?" 
Answer : 
--------
5.
Question : "რითი განსხვავდება rem და em-ი ერთმანეთისგან?" 
Answer : 

Rem  დამოკიდებულია მთავარი ელემენტის შტრიხზე.
ერთი rem ნიშნავს მტკიცე ზომას მაგალითად 16px (თუ root შტრიხი 16px არის).

Em დამოკიდებულია მშობელ ელემენტის შტრიხზე.
ერთი em იქნება მშობლიური ელემენტის შტრიხის 1.5-ჯერ ან სხვანაირად.
--------
6.
Question : "რა არის ვირტუალური DOM-ი?" 
Answer : ვირტუალური DOM-ი არის რეალური DOM-ის ბევრად ჩქარი და პატარა ვერსია, და ანახლებს მარტო იმ ელემენტს რომლებიც მართლა
შეიცვალა
--------
7.
Question : "რა არის useEffect-ის გამოყენების მიზანი?"

Answer : useEffect არის React hook, რომელიც საშუალებას იძლევა შეასრულო კოდი
 კომპონენტის რენდერის შემდეგ, მაგალითად, მონაცემების აღება ან გაწმენდა.
--------
8.
Question : "რა არის Zustand-ი?" 
Answer : მცირე, სწრაფი და მასშტაბური ძვალი სახელმწიფო მართვის გადაწყვეტა გამარტივებული
 ნაკადის პრინციპების გამოყენებით.
 აქვს კომფორტული API, რომელიც დაფუძნებულია Hook-ებზე , არ არის ქვაბის ფირფიტა ან აზრიანი.
--------
9.
Question : "რა არის და როგორ შვქმნათ დინამიური როუთი Next.js-ში" 
Answer : const AddElement = (props) => {
  
  const [dynamicCompList, setDynamicCompList] = useState([]);   
  const addElement = () => {
   const dynamicEl = React.createElement("p", {}, "This is paragraph");
 
--------
10.
Question : "რისთვის ამოიყენება (home) ფოლდერის დასახლება Next-ში. " 
Answer : Home page არის Main Page. 

--------
